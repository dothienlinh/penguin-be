services:
  server:
    container_name: penguin_server
    build: 
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file: .env
    ports:
      - "${APP_PORT}:${APP_PORT}"
    volumes:
      - penguin_uploads:/app/uploads
    depends_on:
      - db
      - redis
    user: "${UID:-1000}:${GID:-1000}"

  db:
    container_name: penguin_db
    image: postgres:15.8-alpine
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes: 
      - penguin_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: penguin_redis
    image: redis:7.4.0-alpine
    restart: unless-stopped
    env_file: .env
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes: 
      - penguin_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  penguin_uploads:
  penguin_db_data:
  penguin_redis_data:
